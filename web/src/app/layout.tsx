import { Auth0Provider } from "@auth0/nextjs-auth0/client";
import { Geist } from "next/font/google";

import { Provider } from "@/components/ui/provider";
import { TRPCReactProvider } from "@/trpc/react";

import type { Metadata } from "next";

import { createSystem, defaultConfig } from "@chakra-ui/react"

export const system = createSystem(defaultConfig, {
  theme: {
    tokens: {
      fonts: {
        heading: { value: `'Figtree', sans-serif` },
        body: { value: `'Figtree', sans-serif` },
      },
    },
  },
})

export const metadata: Metadata = {
  title: "Create T3 App",
  description: "Generated by create-t3-app",
  icons: [{ rel: "icon", url: "/favicon.ico" }],
};

const geist = Geist({
  subsets: ["latin"],
  variable: "--font-geist-sans",
});

export default function RootLayout({
  children,
}: Readonly<{ children: React.ReactNode }>) {
  return (
    <html lang="ja" suppressHydrationWarning className={`${geist.variable}`}>
      <body className="light">
        <Auth0Provider>
          <Provider>
            <TRPCReactProvider>{children}</TRPCReactProvider>
          </Provider>
        </Auth0Provider>
      </body>
    </html>
  );
}
